name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run tests
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Check build output
      run: |
        ls -la dist/
        node -e "console.log(require('./package.json').main)"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          dist/
          package.json
          README.md
          LICENSE

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Run dependency check
      run: npx depcheck
      
    - name: Check for outdated packages
      run: npm outdated || true

  examples:
    runs-on: ubuntu-latest
    needs: build
    
    strategy:
      matrix:
        example: [basic-bot]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install main package dependencies
      run: npm ci
      
    - name: Build main package
      run: npm run build
      
    - name: Pack main package
      run: npm pack
      
    - name: Install example dependencies
      working-directory: examples/${{ matrix.example }}
      run: |
        # Replace package reference with local build
        sed -i 's/"telegram-bot-cloudflare-worker": ".*"/"telegram-bot-cloudflare-worker": "file:..\/..\/telegram-bot-cloudflare-worker-*.tgz"/' package.json
        npm install
        
    - name: Type check example
      working-directory: examples/${{ matrix.example }}
      run: npx tsc --noEmit
      
    - name: Build example
      working-directory: examples/${{ matrix.example }}
      run: npm run build

